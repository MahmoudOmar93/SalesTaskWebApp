@model SalesTaskWebApp.Models.ViewModel.OrderToCreateViewModel
@{ ViewBag.Title = "Create";
                Layout = "~/Views/Shared/_Layout.cshtml"; }
@using (Html.BeginForm("Create", "Sales", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return Create(this);" }))
{
<div class="container p-3">
    <div class="row p-4">
        <div class="col-6">
            <h2 class="text-primary">Create New Sales</h2>
        </div>
    </div>
    <br /> <br />
    <div class="row">
        @Html.AntiForgeryToken()
        <div class="panel panel-success">
            <div class="panel-heading">
                Sales
            </div>
            <div class="panel-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.OrderHeader.OrderNumber, "Invoice Number", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.OrderNumber, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.OrderHeader.OrderNumber, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.OrderHeader.OrderDate, "Order Date", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.OrderHeader.OrderDate, new { @class = "form-control", @type = "Date" })
                            @Html.ValidationMessageFor(model => model.OrderHeader.OrderDate, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.OrderHeader.CustomerId, "Customer", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.OrderHeader.CustomerId, (SelectList)ViewBag.CustomerList, "--Select Category--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.OrderHeader.CustomerId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-2">
                            @Html.LabelFor(model => model.ProductCode, "Product Code", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.ProductCode, new { @class = "form-control" })
                            <span class="text-danger" id="CodeValid"></span>
                        </div>
                        <div class="col-lg-2">
                            @Html.LabelFor(model => model.ProductName, "Product Name", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control" })
                            <span class="text-danger" id="NameValid"></span>
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Price, "Price", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.Price, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Discount, "Discount", htmlAttributes: new { @class = "control-label", @type="Number" })
                            @Html.TextBoxFor(model => model.Discount, new { @class = "form-control" })
                        </div>
                        <div class="col-md-1">
                            @Html.LabelFor(model => model.Quantity, "Quantity", htmlAttributes: new { @class = "control-label" })
                            @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control", @type = "Number" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.TotalPrice, "Total", htmlAttributes: new { @class = "control-label"})
                            @Html.TextBoxFor(model => model.TotalPrice, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        <div class="col-md-1" style="margin-top:26px;">
                            <button type="button" class="btn btn-primary" id="AddOrderToList" disabled>
                                <i class="fa fa-plus"></i>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="form-horizontal">
                    <table class="table table-bordered" id="OrderDetailsTable">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Product Code</th>
                                <th>Product Name</th>
                                <th>Price</th>
                                <th>Discount</th>
                                <th>Quantity</th>
                                <th>Total Price</th>
                                <th hidden></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-8 col-md-offset-4 row">
                <div class="col text-right">
                    @Html.ActionLink("Back To List", "Index", null, new { @class = "btn btn-default" })
                    <input type="submit" name="" class="btn btn-primary w-100" value="Create" />
                </div>
            </div>
        </div>
    </div>
</div>}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/sales.js"></script>
}


