@model SalesTaskWebApp.Models.ViewModel.ProductToCreateViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="container p-3">
        <div class="row p-4">
            <div class="col-6">
                <h2 class="text-primary">Create New Customer</h2>
            </div>
        </div>
        <br /> <br />
        <div class="row">
            @Html.AntiForgeryToken()
            <div class="panel panel-success">
                <div class="panel-heading">
                    Customer
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Code, "Code", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                <div>
                                    @Html.TextBoxFor(model => model.Code, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                <div>
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                <div>
                                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, "Price", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                <div>
                                    @Html.TextBoxFor(model => model.Price, new { @class = "form-control", @type = "number", @min = "1" })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                <div>
                                    @Html.DropDownListFor(model => model.CategoryId, (SelectList)ViewBag.CategoryList, "--Select Category--", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.SubCategoryId, "Sub Category", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                <div>
                                    @Html.DropDownListFor(model => model.SubCategoryId, (SelectList)ViewBag.SubCategoryList, "--Select Category--", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BrandId, "Brand", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                <div>
                                    @Html.DropDownListFor(model => model.BrandId, (SelectList)ViewBag.BrandList, "--Select Category--", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-8 col-md-offset-4 row">
                    <div class="col text-right">
                        @Html.ActionLink("Back To List", "Index", null, new { @class = "btn btn-default" })
                        <input type="submit" name="" class="btn btn-primary w-100" value="Create" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("#CategoryId").change(function () {
            // this will call when Governorate Dropdown select change
            var categoryId = parseInt($("#CategoryId").val());
            if (!isNaN(categoryId)) {
                var subCategory = $("#SubCategoryId");
                subCategory.empty(); // this line is for clear all items from sub category dropdown
                subCategory.append($("<option></option").val("").html("---Please Select---"));

                // Here I will call Controller Action via Jquery to load State for selected City
                $.ajax({
                    url: "/Product/GetSubCategoryByCategoryId",
                    type: "GET",
                    data: { categoryId: categoryId },
                    dataType: "json",
                    success: function (data) {
                        $.each(data, function (i, val) {
                            subCategory.append(
                                $("<option></option>").val(val.Id).html(val.Name)
                            );
                        });
                    },
                    error: function (xhr) {
                        alert(xhr.error);
                    }
                });
            }
        });
    </script>
}



